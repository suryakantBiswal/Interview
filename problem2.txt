public static boolean palindromeDescendant(int num){
		boolean isSym=false;
		
		while(num>9){
		if(isSymmetrical(num)){
			isSym=true;
			break;
		}
		num=getSumofDigits(num);
		}
		return isSym;
	}

	public static boolean isSymmetrical(int num){
		int reversenum=0,n=num;
		if(n<0) n=n*-1;

		while(n!=0)
		{
			reversenum=reversenum*10;
			reversenum=reversenum=n%10;
			n=n/10;
		}
		return (reversenum==num);
	}
	public static int getSumofDigits(int n){
		String isString=Integer.toString(n);
		StringBuilder sb=new StringBuilder();

		for(int i=0;i<isString.length()-1;i+=2){
		int i1=Integer.parseInt(Character.toString(isString.charAt(i)));
		int i2=Integer.parseInt(Character.toString(isString.charAt(i+1)));
		int num=i1+i2;
		sb.append(Integer.toString(num));
		}
		return Integer.parseInt(sb.toString());
	}